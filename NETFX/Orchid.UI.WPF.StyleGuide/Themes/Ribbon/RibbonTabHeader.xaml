<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Orchid.UI.WPF.StyleGuide"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <!--RibbonTabHeader Template-->
    <ControlTemplate x:Key="RibbonTabHeaderTemplate" TargetType="RibbonTabHeader">
        <ControlTemplate.Triggers>

            <!--Disable State-->
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" 
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ThemeHelper.DisableForeground}" />
                <Setter Property="BorderBrush"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ThemeHelper.DisableBorderBrush}" />
                <Setter Property="Background"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ThemeHelper.DisableBackground}" />
            </Trigger>

            <!--Active State-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsRibbonTabSelected}" Value="False" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="False" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsContextualTab}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" 
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ThemeHelper.ActiveForeground}" />
            </MultiDataTrigger>

            <!--Checked State-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsRibbonTabSelected}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsMinimized}" Value="False" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="False" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsContextualTab}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" 
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ThemeHelper.CheckedForeground}" />
                <Setter Property="BorderBrush"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}" />
                <Setter Property="Background"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBackground}" />
            </MultiDataTrigger>

            <!--Focused State-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsRibbonTabSelected}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsMinimized}" Value="False" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsContextualTab}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" 
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ThemeHelper.FocusedForeground}" />
                <Setter Property="BorderBrush"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBorderBrush}" />
                <Setter Property="Background"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBackground}" />
            </MultiDataTrigger>

            <!--Contextual & Active State-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsContextualTab}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsRibbonTabSelected}" Value="False" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" 
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContextualTabGroup.Foreground}" />
            </MultiDataTrigger>

            <!--Contextual & Focused State-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsRibbonTabSelected}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsContextualTab}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsMinimized}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" 
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContextualTabGroup.Foreground}" />
                <Setter Property="BorderBrush"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContextualTabGroup.BorderBrush}" />
                <Setter Property="Background"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FContextualTabGroup.Background}" />
            </MultiDataTrigger>

        </ControlTemplate.Triggers>
        <Border Name="PART_OuterBorder" 
                SnapsToDevicePixels="True"
                BorderBrush="{TemplateBinding BorderBrush}" 
                Background="{TemplateBinding Background}"
                Padding="{TemplateBinding Padding}"
                BorderThickness="1,1,1,0"
                RenderOptions.ClearTypeHint="Enabled">
            <ContentPresenter ContentSource="Content" VerticalAlignment="Center" HorizontalAlignment="Center" />
        </Border>
    </ControlTemplate>

    <!--RibbonTabHeader Style-->
    <Style TargetType="RibbonTabHeader">
        <Style.Triggers>
            <Trigger Property="IsRibbonTabSelected" Value="true">
                <Setter Property="TabIndex" Value="-1" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Margin" Value="0,1,0,0" />
        <Setter Property="Padding" Value="9,1,9,0" />
        <Setter Property="MinHeight" Value="22" />
        <Setter Property="local:ThemeHelper.DisableForeground" Value="{DynamicResource ThemeDisableHeaderForeground}" />
        <Setter Property="local:ThemeHelper.DisableBorderBrush" Value="{DynamicResource ThemeDisableHeaderBorderBrush}" />
        <Setter Property="local:ThemeHelper.DisableBackground" Value="{DynamicResource ThemeDisableHeaderFillBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ThemeNormalHeaderBorderBrush}" />
        <Setter Property="Background" Value="{DynamicResource ThemeNormalHeaderFillBrush}" />
        <Setter Property="CheckedBorderBrush" Value="{DynamicResource ThemeFocusedHeaderBorderBrush}" />
        <Setter Property="CheckedBackground" Value="{DynamicResource ThemeFocusedHeaderFillBrush}" />
        <Setter Property="MouseOverBorderBrush" Value="{DynamicResource ThemeActiveHeaderBorderBrush}" />
        <Setter Property="MouseOverBackground" Value="{DynamicResource ThemeActiveHeaderFillBrush}" />
        <Setter Property="FocusedBorderBrush" Value="{DynamicResource ThemeActiveHeaderBorderBrush}" />
        <Setter Property="FocusedBackground" Value="{DynamicResource ThemeActiveHeaderFillBrush}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template" Value="{StaticResource RibbonTabHeaderTemplate}" />
    </Style>
    
    <DataTemplate x:Key="TemplateForSwitchImage" DataType="sys:Boolean">
    </DataTemplate>
</ResourceDictionary>